set nocompatible
if has("autocmd")
  filetype indent plugin on
endif

" use an old regex engine that's faster?
set re=1

" copy to clipboard?
set clipboard=unnamed " use OS clipboard

" remove the mode section because it's displayed by the statusbar plugin
" set noshowmode

" show relative line numbers except for the current line
set number relativenumber

" colorscheme base16-material-darker
" let g:dracula_colorterm = 0
" let g:dracula_italic = 0
syntax on
" colorscheme dracula
" colorscheme base16-dracula
" set termguicolors
set background=dark
set t_Co=256
let g:gruvbox_italic=1
colorscheme gruvbox
set nohlsearch

" fix my typos
command! Q q " Bind :Q to :q
command! Qall qall
command! QA qall
command! E e
command! W w
command! Wq wq

" Let's be reasonable, shall we?
nmap k gk
nmap j gj

" use silver searcher for greplace
set grepprg=ag

" search for ctags files all the way up to root
set tags^=./.git/tags;

" open file in github
nmap <Leader>g :Gbrowse<CR>

" auto save when going from insert to normal mode
inoremap <Esc> <Esc>:w<CR>

" run Ag from project root
let g:ag_working_path_mode="r"

" config for fzf
map <Leader><tab> :Files<CR>
map <Leader><CR> :Buffers<CR>

" trim whitespace on save
autocmd BufWritePre * :%s/\s\+$//e

" don't fold
set nofoldenable

" coc.vim config
if filereadable($HOME . "/.cocvim.local")
  source ~/.cocvim.local
endif

" bindings for escape
imap jk <Esc>
imap kj <Esc>

" remove statusline
set laststatus=0

" bind K to grep word under cursor
nnoremap K :Ag<CR>

